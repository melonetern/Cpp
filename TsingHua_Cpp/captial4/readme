capital 4 函数
谭浩强c++笔记整理

§inline function
内联函数，可以再声明函数和定义函数同时写，也可以只写一处。
inline int func1(int a, int b); 
内联函数编译的时候直接将函数代码嵌入main函数，增加了main函数长度和源文件体积，但节省运行时间。
编译系统会根据具体情况做决定，有时候会忽略inline声明。

§function overloading
函数重载，函数体的功能相似或相同，参数数据类型不同。同一个函数名分别定义。系统根据实参的类型找到与之匹配的函数。
各个同函数名的函数之间，参数的个数，参数类型，参数顺序必须至少有一个不同，函数返回值可以异同。例如：
int max(int,int,int);
int max(int,int);
float max(float,float);

§function template
函数模板，函数重载的改进版，用虚拟类型定义一次函数，调用的时候实参类型自动代替虚拟类型。例如：
template<typename T>  或者 template<class T>
T max(T a, T b, T c)
{if(b>a) a=b;
 if(c>a) a=c;
 return a;}
类型参数可以不只一个，根据需要确定个数 template<typename T1, class T2>

§有默认参数的函数
指定默认值的参数必须放在最右边
void f1(float a, int c, int b=0, char d='a');
若先声明再定义，那么声明处给出默认值，定义出可以不给。最好只在声明时给出默认值。
一个函数无法既作为重载函数，又有默认函数值。

§变量的存储类别 (Conclusion in page 122)
动态，静态
static/dynamic storage duration
 ------------
|   program  |
 ------------
|static data |  <--- global variables 
 ------------
|dynamic data|  <--- formal parameters, variables in function(without static
 ------------
storage class: auto(dynamic), static, register, extern
auto: most variables in functions
static: all global variables, variable declared with "static"
register: put variable in CPU register, faster, compiler make decicd now
extern: 
1.
int main()
{extern int a,b;
    ...
 return 0;
}
int a,b; //a, b are global variables, declared after main()

2.
declare and define n in file1.cpp, declare in file2.cpp with extern
静态外部变量，为全局变量加static，这样其他文件无法用extern引用改变量！！！

内部函数， static int fun(int a,int b);只能被本文件使用
外部函数， extern或者不加，默认为外部函数
